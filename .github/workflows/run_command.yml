name: Reusable deploy workflow

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string
    secrets:
      DBX_TOKEN:
        required: true


jobs:
  run_command:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          miniconda-version: 'py38_4.8.3'

      - name: cache venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: |
            .venv
            ~/.poetry/env
          key: ${{ github.repository }}-${{ runner.os }}-env-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ github.repository }}-${{ runner.os }}-env-

      - name: setup secrets
        run: |
          cp .env.dist .env
          sed -i "s,DBX_TOKEN=,DBX_TOKEN=${{ secrets.DBX_TOKEN }},g" .env

      - name: setup
        run: |
          export SHELL=$SHELL # for python to be able to access the bash version
          chmod +x env-init.sh
          ./env-init.sh -y --verbose

      - name: run command
        run: |
          eval "$(conda shell.bash hook)"
          conda activate $PWD/.venv
          source ~/.poetry/env
          poetry install --no-root
          ${{ inputs.command }}
